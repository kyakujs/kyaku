/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as AuthSettingsNavigationRouteImport } from './routes/_auth/_settings-navigation'
import { Route as AuthMainNavigationRouteImport } from './routes/_auth/_main-navigation'
import { Route as AuthMainNavigationIndexRouteImport } from './routes/_auth/_main-navigation/index'
import { Route as ApiAuthSplatRouteImport } from './routes/api/auth/$'
import { Route as AuthMainNavigationSearchRouteImport } from './routes/_auth/_main-navigation/search'
import { Route as AuthSettingsNavigationSettingsIndexRouteImport } from './routes/_auth/_settings-navigation/settings/index'
import { Route as AuthMainNavigationTicketsYoursRouteImport } from './routes/_auth/_main-navigation/tickets/yours'
import { Route as AuthMainNavigationTicketsWaitingForCustomerRouteImport } from './routes/_auth/_main-navigation/tickets/waiting-for-customer'
import { Route as AuthMainNavigationTicketsUnassignedRouteImport } from './routes/_auth/_main-navigation/tickets/unassigned'
import { Route as AuthMainNavigationTicketsTodoRouteImport } from './routes/_auth/_main-navigation/tickets/todo'
import { Route as AuthMainNavigationTicketsSnoozedRouteImport } from './routes/_auth/_main-navigation/tickets/snoozed'
import { Route as AuthMainNavigationTicketsPausedForLaterRouteImport } from './routes/_auth/_main-navigation/tickets/paused-for-later'
import { Route as AuthMainNavigationTicketsNeedsNextResponseRouteImport } from './routes/_auth/_main-navigation/tickets/needs-next-response'
import { Route as AuthMainNavigationTicketsNeedsFirstResponseRouteImport } from './routes/_auth/_main-navigation/tickets/needs-first-response'
import { Route as AuthMainNavigationTicketsInvestigatingRouteImport } from './routes/_auth/_main-navigation/tickets/investigating'
import { Route as AuthMainNavigationTicketsDoneRouteImport } from './routes/_auth/_main-navigation/tickets/done'
import { Route as AuthMainNavigationTicketsCloseTheLoopRouteImport } from './routes/_auth/_main-navigation/tickets/close-the-loop'
import { Route as AuthMainNavigationTicketsAllRouteImport } from './routes/_auth/_main-navigation/tickets/all'
import { Route as AuthMainNavigationTicketTicketIdRouteImport } from './routes/_auth/_main-navigation/ticket/$ticketId'
import { Route as AuthSettingsNavigationSettingsAccountProfileRouteImport } from './routes/_auth/_settings-navigation/settings/account/profile'
import { Route as AuthSettingsNavigationSettingsAccountPreferencesRouteImport } from './routes/_auth/_settings-navigation/settings/account/preferences'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSettingsNavigationRoute = AuthSettingsNavigationRouteImport.update({
  id: '/_settings-navigation',
  getParentRoute: () => AuthRoute,
} as any)
const AuthMainNavigationRoute = AuthMainNavigationRouteImport.update({
  id: '/_main-navigation',
  getParentRoute: () => AuthRoute,
} as any)
const AuthMainNavigationIndexRoute = AuthMainNavigationIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthMainNavigationRoute,
} as any)
const ApiAuthSplatRoute = ApiAuthSplatRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthMainNavigationSearchRoute =
  AuthMainNavigationSearchRouteImport.update({
    id: '/search',
    path: '/search',
    getParentRoute: () => AuthMainNavigationRoute,
  } as any)
const AuthSettingsNavigationSettingsIndexRoute =
  AuthSettingsNavigationSettingsIndexRouteImport.update({
    id: '/settings/',
    path: '/settings/',
    getParentRoute: () => AuthSettingsNavigationRoute,
  } as any)
const AuthMainNavigationTicketsYoursRoute =
  AuthMainNavigationTicketsYoursRouteImport.update({
    id: '/tickets/yours',
    path: '/tickets/yours',
    getParentRoute: () => AuthMainNavigationRoute,
  } as any)
const AuthMainNavigationTicketsWaitingForCustomerRoute =
  AuthMainNavigationTicketsWaitingForCustomerRouteImport.update({
    id: '/tickets/waiting-for-customer',
    path: '/tickets/waiting-for-customer',
    getParentRoute: () => AuthMainNavigationRoute,
  } as any)
const AuthMainNavigationTicketsUnassignedRoute =
  AuthMainNavigationTicketsUnassignedRouteImport.update({
    id: '/tickets/unassigned',
    path: '/tickets/unassigned',
    getParentRoute: () => AuthMainNavigationRoute,
  } as any)
const AuthMainNavigationTicketsTodoRoute =
  AuthMainNavigationTicketsTodoRouteImport.update({
    id: '/tickets/todo',
    path: '/tickets/todo',
    getParentRoute: () => AuthMainNavigationRoute,
  } as any)
const AuthMainNavigationTicketsSnoozedRoute =
  AuthMainNavigationTicketsSnoozedRouteImport.update({
    id: '/tickets/snoozed',
    path: '/tickets/snoozed',
    getParentRoute: () => AuthMainNavigationRoute,
  } as any)
const AuthMainNavigationTicketsPausedForLaterRoute =
  AuthMainNavigationTicketsPausedForLaterRouteImport.update({
    id: '/tickets/paused-for-later',
    path: '/tickets/paused-for-later',
    getParentRoute: () => AuthMainNavigationRoute,
  } as any)
const AuthMainNavigationTicketsNeedsNextResponseRoute =
  AuthMainNavigationTicketsNeedsNextResponseRouteImport.update({
    id: '/tickets/needs-next-response',
    path: '/tickets/needs-next-response',
    getParentRoute: () => AuthMainNavigationRoute,
  } as any)
const AuthMainNavigationTicketsNeedsFirstResponseRoute =
  AuthMainNavigationTicketsNeedsFirstResponseRouteImport.update({
    id: '/tickets/needs-first-response',
    path: '/tickets/needs-first-response',
    getParentRoute: () => AuthMainNavigationRoute,
  } as any)
const AuthMainNavigationTicketsInvestigatingRoute =
  AuthMainNavigationTicketsInvestigatingRouteImport.update({
    id: '/tickets/investigating',
    path: '/tickets/investigating',
    getParentRoute: () => AuthMainNavigationRoute,
  } as any)
const AuthMainNavigationTicketsDoneRoute =
  AuthMainNavigationTicketsDoneRouteImport.update({
    id: '/tickets/done',
    path: '/tickets/done',
    getParentRoute: () => AuthMainNavigationRoute,
  } as any)
const AuthMainNavigationTicketsCloseTheLoopRoute =
  AuthMainNavigationTicketsCloseTheLoopRouteImport.update({
    id: '/tickets/close-the-loop',
    path: '/tickets/close-the-loop',
    getParentRoute: () => AuthMainNavigationRoute,
  } as any)
const AuthMainNavigationTicketsAllRoute =
  AuthMainNavigationTicketsAllRouteImport.update({
    id: '/tickets/all',
    path: '/tickets/all',
    getParentRoute: () => AuthMainNavigationRoute,
  } as any)
const AuthMainNavigationTicketTicketIdRoute =
  AuthMainNavigationTicketTicketIdRouteImport.update({
    id: '/ticket/$ticketId',
    path: '/ticket/$ticketId',
    getParentRoute: () => AuthMainNavigationRoute,
  } as any)
const AuthSettingsNavigationSettingsAccountProfileRoute =
  AuthSettingsNavigationSettingsAccountProfileRouteImport.update({
    id: '/settings/account/profile',
    path: '/settings/account/profile',
    getParentRoute: () => AuthSettingsNavigationRoute,
  } as any)
const AuthSettingsNavigationSettingsAccountPreferencesRoute =
  AuthSettingsNavigationSettingsAccountPreferencesRouteImport.update({
    id: '/settings/account/preferences',
    path: '/settings/account/preferences',
    getParentRoute: () => AuthSettingsNavigationRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/search': typeof AuthMainNavigationSearchRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/': typeof AuthMainNavigationIndexRoute
  '/ticket/$ticketId': typeof AuthMainNavigationTicketTicketIdRoute
  '/tickets/all': typeof AuthMainNavigationTicketsAllRoute
  '/tickets/close-the-loop': typeof AuthMainNavigationTicketsCloseTheLoopRoute
  '/tickets/done': typeof AuthMainNavigationTicketsDoneRoute
  '/tickets/investigating': typeof AuthMainNavigationTicketsInvestigatingRoute
  '/tickets/needs-first-response': typeof AuthMainNavigationTicketsNeedsFirstResponseRoute
  '/tickets/needs-next-response': typeof AuthMainNavigationTicketsNeedsNextResponseRoute
  '/tickets/paused-for-later': typeof AuthMainNavigationTicketsPausedForLaterRoute
  '/tickets/snoozed': typeof AuthMainNavigationTicketsSnoozedRoute
  '/tickets/todo': typeof AuthMainNavigationTicketsTodoRoute
  '/tickets/unassigned': typeof AuthMainNavigationTicketsUnassignedRoute
  '/tickets/waiting-for-customer': typeof AuthMainNavigationTicketsWaitingForCustomerRoute
  '/tickets/yours': typeof AuthMainNavigationTicketsYoursRoute
  '/settings': typeof AuthSettingsNavigationSettingsIndexRoute
  '/settings/account/preferences': typeof AuthSettingsNavigationSettingsAccountPreferencesRoute
  '/settings/account/profile': typeof AuthSettingsNavigationSettingsAccountProfileRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/search': typeof AuthMainNavigationSearchRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/': typeof AuthMainNavigationIndexRoute
  '/ticket/$ticketId': typeof AuthMainNavigationTicketTicketIdRoute
  '/tickets/all': typeof AuthMainNavigationTicketsAllRoute
  '/tickets/close-the-loop': typeof AuthMainNavigationTicketsCloseTheLoopRoute
  '/tickets/done': typeof AuthMainNavigationTicketsDoneRoute
  '/tickets/investigating': typeof AuthMainNavigationTicketsInvestigatingRoute
  '/tickets/needs-first-response': typeof AuthMainNavigationTicketsNeedsFirstResponseRoute
  '/tickets/needs-next-response': typeof AuthMainNavigationTicketsNeedsNextResponseRoute
  '/tickets/paused-for-later': typeof AuthMainNavigationTicketsPausedForLaterRoute
  '/tickets/snoozed': typeof AuthMainNavigationTicketsSnoozedRoute
  '/tickets/todo': typeof AuthMainNavigationTicketsTodoRoute
  '/tickets/unassigned': typeof AuthMainNavigationTicketsUnassignedRoute
  '/tickets/waiting-for-customer': typeof AuthMainNavigationTicketsWaitingForCustomerRoute
  '/tickets/yours': typeof AuthMainNavigationTicketsYoursRoute
  '/settings': typeof AuthSettingsNavigationSettingsIndexRoute
  '/settings/account/preferences': typeof AuthSettingsNavigationSettingsAccountPreferencesRoute
  '/settings/account/profile': typeof AuthSettingsNavigationSettingsAccountProfileRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/_auth/_main-navigation': typeof AuthMainNavigationRouteWithChildren
  '/_auth/_settings-navigation': typeof AuthSettingsNavigationRouteWithChildren
  '/_auth/_main-navigation/search': typeof AuthMainNavigationSearchRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/_auth/_main-navigation/': typeof AuthMainNavigationIndexRoute
  '/_auth/_main-navigation/ticket/$ticketId': typeof AuthMainNavigationTicketTicketIdRoute
  '/_auth/_main-navigation/tickets/all': typeof AuthMainNavigationTicketsAllRoute
  '/_auth/_main-navigation/tickets/close-the-loop': typeof AuthMainNavigationTicketsCloseTheLoopRoute
  '/_auth/_main-navigation/tickets/done': typeof AuthMainNavigationTicketsDoneRoute
  '/_auth/_main-navigation/tickets/investigating': typeof AuthMainNavigationTicketsInvestigatingRoute
  '/_auth/_main-navigation/tickets/needs-first-response': typeof AuthMainNavigationTicketsNeedsFirstResponseRoute
  '/_auth/_main-navigation/tickets/needs-next-response': typeof AuthMainNavigationTicketsNeedsNextResponseRoute
  '/_auth/_main-navigation/tickets/paused-for-later': typeof AuthMainNavigationTicketsPausedForLaterRoute
  '/_auth/_main-navigation/tickets/snoozed': typeof AuthMainNavigationTicketsSnoozedRoute
  '/_auth/_main-navigation/tickets/todo': typeof AuthMainNavigationTicketsTodoRoute
  '/_auth/_main-navigation/tickets/unassigned': typeof AuthMainNavigationTicketsUnassignedRoute
  '/_auth/_main-navigation/tickets/waiting-for-customer': typeof AuthMainNavigationTicketsWaitingForCustomerRoute
  '/_auth/_main-navigation/tickets/yours': typeof AuthMainNavigationTicketsYoursRoute
  '/_auth/_settings-navigation/settings/': typeof AuthSettingsNavigationSettingsIndexRoute
  '/_auth/_settings-navigation/settings/account/preferences': typeof AuthSettingsNavigationSettingsAccountPreferencesRoute
  '/_auth/_settings-navigation/settings/account/profile': typeof AuthSettingsNavigationSettingsAccountProfileRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/search'
    | '/api/auth/$'
    | '/'
    | '/ticket/$ticketId'
    | '/tickets/all'
    | '/tickets/close-the-loop'
    | '/tickets/done'
    | '/tickets/investigating'
    | '/tickets/needs-first-response'
    | '/tickets/needs-next-response'
    | '/tickets/paused-for-later'
    | '/tickets/snoozed'
    | '/tickets/todo'
    | '/tickets/unassigned'
    | '/tickets/waiting-for-customer'
    | '/tickets/yours'
    | '/settings'
    | '/settings/account/preferences'
    | '/settings/account/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/search'
    | '/api/auth/$'
    | '/'
    | '/ticket/$ticketId'
    | '/tickets/all'
    | '/tickets/close-the-loop'
    | '/tickets/done'
    | '/tickets/investigating'
    | '/tickets/needs-first-response'
    | '/tickets/needs-next-response'
    | '/tickets/paused-for-later'
    | '/tickets/snoozed'
    | '/tickets/todo'
    | '/tickets/unassigned'
    | '/tickets/waiting-for-customer'
    | '/tickets/yours'
    | '/settings'
    | '/settings/account/preferences'
    | '/settings/account/profile'
  id:
    | '__root__'
    | '/_auth'
    | '/login'
    | '/_auth/_main-navigation'
    | '/_auth/_settings-navigation'
    | '/_auth/_main-navigation/search'
    | '/api/auth/$'
    | '/_auth/_main-navigation/'
    | '/_auth/_main-navigation/ticket/$ticketId'
    | '/_auth/_main-navigation/tickets/all'
    | '/_auth/_main-navigation/tickets/close-the-loop'
    | '/_auth/_main-navigation/tickets/done'
    | '/_auth/_main-navigation/tickets/investigating'
    | '/_auth/_main-navigation/tickets/needs-first-response'
    | '/_auth/_main-navigation/tickets/needs-next-response'
    | '/_auth/_main-navigation/tickets/paused-for-later'
    | '/_auth/_main-navigation/tickets/snoozed'
    | '/_auth/_main-navigation/tickets/todo'
    | '/_auth/_main-navigation/tickets/unassigned'
    | '/_auth/_main-navigation/tickets/waiting-for-customer'
    | '/_auth/_main-navigation/tickets/yours'
    | '/_auth/_settings-navigation/settings/'
    | '/_auth/_settings-navigation/settings/account/preferences'
    | '/_auth/_settings-navigation/settings/account/profile'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
  ApiAuthSplatRoute: typeof ApiAuthSplatRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/_settings-navigation': {
      id: '/_auth/_settings-navigation'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthSettingsNavigationRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/_main-navigation': {
      id: '/_auth/_main-navigation'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthMainNavigationRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/_main-navigation/': {
      id: '/_auth/_main-navigation/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthMainNavigationIndexRouteImport
      parentRoute: typeof AuthMainNavigationRoute
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/_main-navigation/search': {
      id: '/_auth/_main-navigation/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof AuthMainNavigationSearchRouteImport
      parentRoute: typeof AuthMainNavigationRoute
    }
    '/_auth/_settings-navigation/settings/': {
      id: '/_auth/_settings-navigation/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthSettingsNavigationSettingsIndexRouteImport
      parentRoute: typeof AuthSettingsNavigationRoute
    }
    '/_auth/_main-navigation/tickets/yours': {
      id: '/_auth/_main-navigation/tickets/yours'
      path: '/tickets/yours'
      fullPath: '/tickets/yours'
      preLoaderRoute: typeof AuthMainNavigationTicketsYoursRouteImport
      parentRoute: typeof AuthMainNavigationRoute
    }
    '/_auth/_main-navigation/tickets/waiting-for-customer': {
      id: '/_auth/_main-navigation/tickets/waiting-for-customer'
      path: '/tickets/waiting-for-customer'
      fullPath: '/tickets/waiting-for-customer'
      preLoaderRoute: typeof AuthMainNavigationTicketsWaitingForCustomerRouteImport
      parentRoute: typeof AuthMainNavigationRoute
    }
    '/_auth/_main-navigation/tickets/unassigned': {
      id: '/_auth/_main-navigation/tickets/unassigned'
      path: '/tickets/unassigned'
      fullPath: '/tickets/unassigned'
      preLoaderRoute: typeof AuthMainNavigationTicketsUnassignedRouteImport
      parentRoute: typeof AuthMainNavigationRoute
    }
    '/_auth/_main-navigation/tickets/todo': {
      id: '/_auth/_main-navigation/tickets/todo'
      path: '/tickets/todo'
      fullPath: '/tickets/todo'
      preLoaderRoute: typeof AuthMainNavigationTicketsTodoRouteImport
      parentRoute: typeof AuthMainNavigationRoute
    }
    '/_auth/_main-navigation/tickets/snoozed': {
      id: '/_auth/_main-navigation/tickets/snoozed'
      path: '/tickets/snoozed'
      fullPath: '/tickets/snoozed'
      preLoaderRoute: typeof AuthMainNavigationTicketsSnoozedRouteImport
      parentRoute: typeof AuthMainNavigationRoute
    }
    '/_auth/_main-navigation/tickets/paused-for-later': {
      id: '/_auth/_main-navigation/tickets/paused-for-later'
      path: '/tickets/paused-for-later'
      fullPath: '/tickets/paused-for-later'
      preLoaderRoute: typeof AuthMainNavigationTicketsPausedForLaterRouteImport
      parentRoute: typeof AuthMainNavigationRoute
    }
    '/_auth/_main-navigation/tickets/needs-next-response': {
      id: '/_auth/_main-navigation/tickets/needs-next-response'
      path: '/tickets/needs-next-response'
      fullPath: '/tickets/needs-next-response'
      preLoaderRoute: typeof AuthMainNavigationTicketsNeedsNextResponseRouteImport
      parentRoute: typeof AuthMainNavigationRoute
    }
    '/_auth/_main-navigation/tickets/needs-first-response': {
      id: '/_auth/_main-navigation/tickets/needs-first-response'
      path: '/tickets/needs-first-response'
      fullPath: '/tickets/needs-first-response'
      preLoaderRoute: typeof AuthMainNavigationTicketsNeedsFirstResponseRouteImport
      parentRoute: typeof AuthMainNavigationRoute
    }
    '/_auth/_main-navigation/tickets/investigating': {
      id: '/_auth/_main-navigation/tickets/investigating'
      path: '/tickets/investigating'
      fullPath: '/tickets/investigating'
      preLoaderRoute: typeof AuthMainNavigationTicketsInvestigatingRouteImport
      parentRoute: typeof AuthMainNavigationRoute
    }
    '/_auth/_main-navigation/tickets/done': {
      id: '/_auth/_main-navigation/tickets/done'
      path: '/tickets/done'
      fullPath: '/tickets/done'
      preLoaderRoute: typeof AuthMainNavigationTicketsDoneRouteImport
      parentRoute: typeof AuthMainNavigationRoute
    }
    '/_auth/_main-navigation/tickets/close-the-loop': {
      id: '/_auth/_main-navigation/tickets/close-the-loop'
      path: '/tickets/close-the-loop'
      fullPath: '/tickets/close-the-loop'
      preLoaderRoute: typeof AuthMainNavigationTicketsCloseTheLoopRouteImport
      parentRoute: typeof AuthMainNavigationRoute
    }
    '/_auth/_main-navigation/tickets/all': {
      id: '/_auth/_main-navigation/tickets/all'
      path: '/tickets/all'
      fullPath: '/tickets/all'
      preLoaderRoute: typeof AuthMainNavigationTicketsAllRouteImport
      parentRoute: typeof AuthMainNavigationRoute
    }
    '/_auth/_main-navigation/ticket/$ticketId': {
      id: '/_auth/_main-navigation/ticket/$ticketId'
      path: '/ticket/$ticketId'
      fullPath: '/ticket/$ticketId'
      preLoaderRoute: typeof AuthMainNavigationTicketTicketIdRouteImport
      parentRoute: typeof AuthMainNavigationRoute
    }
    '/_auth/_settings-navigation/settings/account/profile': {
      id: '/_auth/_settings-navigation/settings/account/profile'
      path: '/settings/account/profile'
      fullPath: '/settings/account/profile'
      preLoaderRoute: typeof AuthSettingsNavigationSettingsAccountProfileRouteImport
      parentRoute: typeof AuthSettingsNavigationRoute
    }
    '/_auth/_settings-navigation/settings/account/preferences': {
      id: '/_auth/_settings-navigation/settings/account/preferences'
      path: '/settings/account/preferences'
      fullPath: '/settings/account/preferences'
      preLoaderRoute: typeof AuthSettingsNavigationSettingsAccountPreferencesRouteImport
      parentRoute: typeof AuthSettingsNavigationRoute
    }
  }
}

interface AuthMainNavigationRouteChildren {
  AuthMainNavigationSearchRoute: typeof AuthMainNavigationSearchRoute
  AuthMainNavigationIndexRoute: typeof AuthMainNavigationIndexRoute
  AuthMainNavigationTicketTicketIdRoute: typeof AuthMainNavigationTicketTicketIdRoute
  AuthMainNavigationTicketsAllRoute: typeof AuthMainNavigationTicketsAllRoute
  AuthMainNavigationTicketsCloseTheLoopRoute: typeof AuthMainNavigationTicketsCloseTheLoopRoute
  AuthMainNavigationTicketsDoneRoute: typeof AuthMainNavigationTicketsDoneRoute
  AuthMainNavigationTicketsInvestigatingRoute: typeof AuthMainNavigationTicketsInvestigatingRoute
  AuthMainNavigationTicketsNeedsFirstResponseRoute: typeof AuthMainNavigationTicketsNeedsFirstResponseRoute
  AuthMainNavigationTicketsNeedsNextResponseRoute: typeof AuthMainNavigationTicketsNeedsNextResponseRoute
  AuthMainNavigationTicketsPausedForLaterRoute: typeof AuthMainNavigationTicketsPausedForLaterRoute
  AuthMainNavigationTicketsSnoozedRoute: typeof AuthMainNavigationTicketsSnoozedRoute
  AuthMainNavigationTicketsTodoRoute: typeof AuthMainNavigationTicketsTodoRoute
  AuthMainNavigationTicketsUnassignedRoute: typeof AuthMainNavigationTicketsUnassignedRoute
  AuthMainNavigationTicketsWaitingForCustomerRoute: typeof AuthMainNavigationTicketsWaitingForCustomerRoute
  AuthMainNavigationTicketsYoursRoute: typeof AuthMainNavigationTicketsYoursRoute
}

const AuthMainNavigationRouteChildren: AuthMainNavigationRouteChildren = {
  AuthMainNavigationSearchRoute: AuthMainNavigationSearchRoute,
  AuthMainNavigationIndexRoute: AuthMainNavigationIndexRoute,
  AuthMainNavigationTicketTicketIdRoute: AuthMainNavigationTicketTicketIdRoute,
  AuthMainNavigationTicketsAllRoute: AuthMainNavigationTicketsAllRoute,
  AuthMainNavigationTicketsCloseTheLoopRoute:
    AuthMainNavigationTicketsCloseTheLoopRoute,
  AuthMainNavigationTicketsDoneRoute: AuthMainNavigationTicketsDoneRoute,
  AuthMainNavigationTicketsInvestigatingRoute:
    AuthMainNavigationTicketsInvestigatingRoute,
  AuthMainNavigationTicketsNeedsFirstResponseRoute:
    AuthMainNavigationTicketsNeedsFirstResponseRoute,
  AuthMainNavigationTicketsNeedsNextResponseRoute:
    AuthMainNavigationTicketsNeedsNextResponseRoute,
  AuthMainNavigationTicketsPausedForLaterRoute:
    AuthMainNavigationTicketsPausedForLaterRoute,
  AuthMainNavigationTicketsSnoozedRoute: AuthMainNavigationTicketsSnoozedRoute,
  AuthMainNavigationTicketsTodoRoute: AuthMainNavigationTicketsTodoRoute,
  AuthMainNavigationTicketsUnassignedRoute:
    AuthMainNavigationTicketsUnassignedRoute,
  AuthMainNavigationTicketsWaitingForCustomerRoute:
    AuthMainNavigationTicketsWaitingForCustomerRoute,
  AuthMainNavigationTicketsYoursRoute: AuthMainNavigationTicketsYoursRoute,
}

const AuthMainNavigationRouteWithChildren =
  AuthMainNavigationRoute._addFileChildren(AuthMainNavigationRouteChildren)

interface AuthSettingsNavigationRouteChildren {
  AuthSettingsNavigationSettingsIndexRoute: typeof AuthSettingsNavigationSettingsIndexRoute
  AuthSettingsNavigationSettingsAccountPreferencesRoute: typeof AuthSettingsNavigationSettingsAccountPreferencesRoute
  AuthSettingsNavigationSettingsAccountProfileRoute: typeof AuthSettingsNavigationSettingsAccountProfileRoute
}

const AuthSettingsNavigationRouteChildren: AuthSettingsNavigationRouteChildren =
  {
    AuthSettingsNavigationSettingsIndexRoute:
      AuthSettingsNavigationSettingsIndexRoute,
    AuthSettingsNavigationSettingsAccountPreferencesRoute:
      AuthSettingsNavigationSettingsAccountPreferencesRoute,
    AuthSettingsNavigationSettingsAccountProfileRoute:
      AuthSettingsNavigationSettingsAccountProfileRoute,
  }

const AuthSettingsNavigationRouteWithChildren =
  AuthSettingsNavigationRoute._addFileChildren(
    AuthSettingsNavigationRouteChildren,
  )

interface AuthRouteChildren {
  AuthMainNavigationRoute: typeof AuthMainNavigationRouteWithChildren
  AuthSettingsNavigationRoute: typeof AuthSettingsNavigationRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthMainNavigationRoute: AuthMainNavigationRouteWithChildren,
  AuthSettingsNavigationRoute: AuthSettingsNavigationRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
  ApiAuthSplatRoute: ApiAuthSplatRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.ts'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
